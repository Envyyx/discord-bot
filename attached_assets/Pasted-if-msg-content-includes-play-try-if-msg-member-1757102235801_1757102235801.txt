if (msg.content.includes('-play')) {
                try {
                        if (!msg.member.voice.channel) return msg.channel.send("‚ùå You're not in a voice channel.");

                        const message = msg.content;
                        var song = message.replace('-play', '').trim();

                        if (!song) {
                                return msg.channel.send("‚ùå Please provide a YouTube URL. Usage: `-play [YouTube URL]`");
                        }

                        // Validate if it's a YouTube URL
                        if (!song.includes('youtube.com') && !song.includes('youtu.be')) {
                                return msg.channel.send("‚ùå Please provide a valid YouTube URL.");
                        }

                        msg.channel.send("üéµ Loading music...").then(loadingMsg => {
                                setTimeout(() => loadingMsg.delete().catch(() => {}), 5000);
                        });

                        // Join voice channel with improved connection handling
                        msg.member.voice.channel.join({
                                timeout: 30000, // Increase timeout to 30 seconds
                                guildTimeout: 30000
                        })
                                .then(connection => {
                                        // Delete the command message after successfully joining
                                        msg.delete().catch(() => {});
                                        
                                        // Add connection event handlers
                                        connection.on('disconnect', () => {
                                                console.log('Voice connection disconnected');
                                        });
                                        
                                        connection.on('error', (error) => {
                                                console.error('Voice connection error:', error);
                                                msg.channel.send("‚ùå Voice connection error occurred.");
                                        });

                                        try {
                                                let stream = ytdl(song, {
                                                        filter: "audioonly",
                                                        opusEncoded: false,
                                                        fmt: "mp3",
                                                        encoderArgs: ['-af', 'bass=g=10,dynaudnorm=f=200'],
                                                        requestOptions: {
                                                                headers: {
                                                                        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
                                                                }
                                                        }
                                                });

                                                let dispatcher = connection.play(stream, {
                                                        type: "unknown",
                                                        volume: 0.5
                                                })
                                                        .on("start", () => {
                                                                msg.channel.send("üéµ Now playing!").then(playMsg => {
                                                                        setTimeout(() => playMsg.delete().catch(() => {}), 3000);
                                                                });
                                                        })
                                                        .on("finish", () => {
                                                                setTimeout(() => {
                                                                        if (connection && connection.voice && connection.voice.connection) {
                                                                                connection.disconnect();
                                                                        }
                                                                }, 1000);
                                                        })
                                                        .on("error", (error) => {
                                                                console.error('Stream error:', error);
                                                                msg.channel.send("‚ùå Error playing audio. The video might be unavailable or restricted.");
                                                                setTimeout(() => {
                                                                        if (connection && connection.voice && connection.voice.connection) {
                                                                                connection.disconnect();
                                                                        }
                                                                }, 1000);
                                                        });
                                        } catch (streamError) {
                                                console.error('ytdl-core error:', streamError);
                                                msg.channel.send("‚ùå Failed to load video. It might be unavailable, private, or age-restricted.");
                                                setTimeout(() => {
                                                        if (connection && connection.voice && connection.voice.connection) {
                                                                connection.disconnect();
                                                        }
                                                }, 1000);
                                        }
                                })
                                .catch(voiceError => {
                                        console.error('Voice connection error:', voiceError);
                                        if (voiceError.code === 'VOICE_CONNECTION_TIMEOUT') {
                                                msg.channel.send("‚ùå Voice connection timed out. This might be due to server limitations or network issues. Try again later.");
                                        } else {
                                                msg.channel.send("‚ùå Failed to join voice channel. Make sure I have proper permissions and try again.");
                                        }
                                });
                }
                catch (err) {
                        console.error('Play command error:', err);
                        msg.channel.send("‚ùå An error occurred while trying to play music.");
                }
        }

        if (msg.content == '-leave') {
                if (!msg.member.voice.channel) return msg.channel.send("You're not in a voice channel.");

                msg.member.voice.channel.leave();
                msg.delete();